{"ast":null,"code":"import React, { Fragment, useRef, useState, useMemo, useEffect } from 'react';\n/**\n * Renders a React component while also checking whether the children are a function or not\n * @param props Props of the component to render\n */\n\nvar render = function render(props) {\n  if (typeof props.children === 'function') {\n    return React.createElement(Fragment, null, props.children());\n  }\n\n  return React.createElement(Fragment, null, props.children || null);\n};\n/**\n * If the `<Case />` is the first one to have its condition evaluates to true\n * inside the parent `<Switch />` it will be the only rendered.\n * @param props The props to pass down to the `<Case />` component\n */\n\n\nvar Case = function Case(props) {\n  return render(props);\n};\n\nCase.defaultProps = {\n  children: null\n};\n/**\n * If no `<Case />` have its condition evaluates to true inside the parent `<Switch />`,\n * the first `<Default />` will be the only one rendered.\n * @param props The props to pass down to the `<Default />` component\n */\n\nvar Default = function Default(props) {\n  return render(props);\n};\n\nDefault.defaultProps = {\n  children: null\n};\n/**\n * Must only contain a single child, which it renders as-is.\n * Should not be used outside of an `<If />` block.\n * @param props The props to pass down to the `<Else />` component\n */\n\nvar Else = function Else(props) {\n  return render(props);\n};\n/**\n * Must contain only a single child, which it renders as-is.\n * Should not be used outside of an `<If />` block whose condition prop is a promise.\n * @param props The props to pass down to the `<Fallback />` component\n */\n\n\nvar Fallback = function Fallback(props) {\n  return render(props);\n};\n/**\n * Resolves a condition that is {@link BooleanLike} or returns {@link BooleanLike} from a function\n * @param condition The condition to resolve\n */\n\n\nvar getConditionResult = function getConditionResult(condition) {\n  var conditionResult = Boolean(typeof condition === 'function' ? condition() : condition);\n  return conditionResult;\n};\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar runtime_1 = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1; // More compressible than void 0.\n\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n    function define(obj, key, value) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n      return obj[key];\n    }\n\n    try {\n      // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n      define({}, \"\");\n    } catch (err) {\n      define = function (obj, key, value) {\n        return obj[key] = value;\n      };\n    }\n\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n\n    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n\n    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n\n    function Generator() {}\n\n    function GeneratorFunction() {}\n\n    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n\n\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function () {\n      return this;\n    });\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = GeneratorFunctionPrototype;\n    define(Gp, \"constructor\", GeneratorFunctionPrototype);\n    define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        define(prototype, method, function (arg) {\n          return this._invoke(method, arg);\n        });\n      });\n    }\n\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n      }\n\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    }; // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n\n\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n\n          return PromiseImpl.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n\n      var previousPromise;\n\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n\n        return previousPromise = // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      } // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n\n\n      this._invoke = enqueue;\n    }\n\n    defineIteratorMethods(AsyncIterator.prototype);\n    define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n      return this;\n    });\n    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n\n    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0) PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          } // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n          return doneResult();\n        }\n\n        context.method = method;\n        context.arg = arg;\n\n        while (true) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    } // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n\n      if (method === undefined$1) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n\n        return ContinueSentinel;\n      }\n\n      var record = tryCatch(method, delegate.iterator, context.arg);\n\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      var info = record.arg;\n\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      } // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n\n\n      context.delegate = null;\n      return ContinueSentinel;\n    } // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n\n\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n    define(Gp, iteratorSymbol, function () {\n      return this;\n    });\n    define(Gp, \"toString\", function () {\n      return \"[object Generator]\";\n    });\n\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n\n      this.tryEntries.push(entry);\n    }\n\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n\n    exports.keys = function (object) {\n      var keys = [];\n\n      for (var key in object) {\n        keys.push(key);\n      }\n\n      keys.reverse(); // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        } // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n\n\n        next.done = true;\n        return next;\n      };\n    };\n\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n              next = function next() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next.value = iterable[i];\n                next.done = false;\n                return next;\n              }\n            }\n\n            next.value = undefined$1;\n            next.done = true;\n            return next;\n          };\n\n          return next.next = next;\n        }\n      } // Return an iterator with no values.\n\n\n      return {\n        next: doneResult\n      };\n    }\n\n    exports.values = values;\n\n    function doneResult() {\n      return {\n        value: undefined$1,\n        done: true\n      };\n    }\n\n    Context.prototype = {\n      constructor: Context,\n      reset: function (skipTempReset) {\n        this.prev = 0;\n        this.next = 0; // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function () {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n\n        return this.rval;\n      },\n      dispatchException: function (exception) {\n        if (this.done) {\n          throw exception;\n        }\n\n        var context = this;\n\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n\n          return !!caught;\n        }\n\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function (type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n\n        return this.complete(record);\n      },\n      complete: function (record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n\n        return ContinueSentinel;\n      },\n      finish: function (finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function (tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n\n            return thrown;\n          }\n        } // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function (iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined$1;\n        }\n\n        return ContinueSentinel;\n      }\n    }; // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n    return exports;\n  }( // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports);\n\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, in modern engines\n    // we can explicitly access globalThis. In older engines we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    if (typeof globalThis === \"object\") {\n      globalThis.regeneratorRuntime = runtime;\n    } else {\n      Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n    }\n  }\n});\n/**\n * The MIT License (MIT)\n *\n * Copyright © `2020` `The Sapphire Community and its contributors`\n *\n * Source: https://github.com/sapphiredev/utilities/blob/main/packages/utilities/src/lib/isThenable.ts\n * Full license: https://github.com/sapphiredev/utilities/blob/main/LICENSE.md\n */\n\n/**\n * Verify if the input is a function.\n * @param input The function to verify\n */\n\nfunction isFunction(input) {\n  return typeof input === 'function';\n}\n\nfunction hasThen(input) {\n  return Reflect.has(input, 'then') && isFunction(input.then);\n}\n\nfunction hasCatch(input) {\n  return Reflect.has(input, 'catch') && isFunction(input[\"catch\"]);\n}\n/**\n * Verify if an object is a promise.\n * @param input The promise to verify\n */\n\n\nfunction isThenable(input) {\n  if (typeof input !== 'object' || input === null) return false;\n  return input instanceof Promise || input !== Promise.prototype && hasThen(input) && hasCatch(input);\n}\n/**\n * Compare two arrays without checking for possible nested properties\n * @param a Array to compare with b\n * @param b Array to compare with a\n * @returns True if arrays are identical, false if they are different\n */\n\n\nvar shallowArraysEqual = function shallowArraysEqual(a, b) {\n  if (!Array.isArray(a) || !Array.isArray(b)) throw new Error('shallowArraysEqual only accepts arrays as parameters');\n  if (a.length !== b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n};\n/**\n * Create a CancellablePromise from a native Promise\n * @param promise The promise object to wrap\n * @returns Return value is an object of type CancellablePromise, with 2 properties:\n * - promise: a promise that can be left pending\n * - cancel: the function to use for cancelling the returned promise\n */\n\n\nvar createCancellablePromise = function createCancellablePromise(promise) {\n  if (!isThenable(promise)) {\n    throw new Error('Argument of createCancellablePromise should be a Promise');\n  }\n\n  var isCancelled = {\n    value: false\n  };\n  var wrappedPromise = new Promise( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(res, rej) {\n      var d;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return promise;\n\n            case 3:\n              d = _context.sent;\n              return _context.abrupt(\"return\", !isCancelled.value && res(d));\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              !isCancelled.value && rej(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }()); // Forward potential additional properties\n\n  Object.keys(promise).forEach(function (key) {\n    wrappedPromise[key] = promise[key];\n  });\n  return {\n    promise: wrappedPromise,\n    cancel: function cancel() {\n      isCancelled.value = true;\n    }\n  };\n};\n/**\n * Calls a function only once during component lifecycle;\n * When dependency array is provided, will call the function again if at least one of the dependencies changed\n * @param callback The function to execute only once\n * @param dependencies A list of dependencies whose value, if changed since last call,\n * will trigger the execution of the callback\n */\n\n\nvar useSingleton = function useSingleton(callback, dependencies) {\n  if (dependencies === void 0) {\n    dependencies = [];\n  }\n\n  var hasRan = useRef(false);\n  var lastDependencies = useRef([]); // Parameters type check\n\n  if (typeof callback !== 'function') {\n    throw new Error(\"Incorrect callback parameter for useSingleton hook; expected a function, but got: '\" + typeof callback + \"'.\");\n  }\n\n  if (!Array.isArray(dependencies)) {\n    throw new Error(\"Incorrect dependencies parameter for useSingleton; expected an array, but got: '\" + typeof dependencies + \"'.\");\n  }\n\n  var hasDependencies = Array.isArray(dependencies) && dependencies.length > 0;\n\n  if (hasDependencies) {\n    // Has dependencies\n    var hasAnyDependencyChanged = !shallowArraysEqual(lastDependencies.current, dependencies);\n\n    if (hasAnyDependencyChanged) {\n      // Any dep has changed => overwrite last dependencies and execute callback\n      lastDependencies.current = dependencies;\n    } else if (hasRan.current) {\n      // No dep has changed => same behaviour as if no dependencies\n      return;\n    }\n  } else if (hasRan.current) {\n    // No dependencies\n    return;\n  }\n\n  callback();\n  hasRan.current = true;\n};\n/**\n * Must contain only a single child, which it renders as-is.\n * Should not be used outside of an `<If />` block.\n * @param props The props to pass down to the `<Then />` component\n */\n\n\nvar Then = function Then(props) {\n  return render(props);\n};\n/**\n * Is included in the `<If />` component, rendered when the condition prop of `<If />` is a Promise;\n * Renders the Fallback component, if contains any, until provided promise is fulfilled;\n * Renders `<Then />` when promise is fulfilled, `<Else />` when rejected\n */\n\n\nfunction IfAsync(_ref) {\n  var promise = _ref.promise,\n      _ref$keepAlive = _ref.keepAlive,\n      keepAlive = _ref$keepAlive === void 0 ? false : _ref$keepAlive,\n      children = _ref.children;\n\n  var _useState = useState(null),\n      isResolved = _useState[0],\n      setIsResolved = _useState[1];\n\n  var _useState2 = useState(null),\n      returnValue = _useState2[0],\n      setReturnValue = _useState2[1]; // Make promise cancellable\n\n\n  var cancellablePromise = useMemo(function () {\n    return createCancellablePromise(promise);\n  }, [promise]);\n  var history = useRef([]); // Keep history of promises\n  // Handle unmount\n\n  useEffect(function () {\n    return function () {\n      if (!keepAlive) {\n        cancellablePromise.cancel();\n      }\n    };\n  }, [cancellablePromise, cancellablePromise.promise, keepAlive]); // Await promise\n\n  useSingleton( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var data;\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsResolved(null);\n            setReturnValue(null);\n            _context.prev = 2;\n            _context.next = 5;\n            return cancellablePromise.promise;\n\n          case 5:\n            data = _context.sent;\n            setReturnValue(data);\n            setIsResolved(true);\n            history.current.push(cancellablePromise);\n            _context.next = 16;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            setReturnValue(_context.t0);\n            setIsResolved(false);\n            history.current.push(cancellablePromise);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 11]]);\n  })), [cancellablePromise.promise]);\n\n  if (!children || !isThenable(promise)) {\n    return null;\n  }\n\n  if (isResolved === null) {\n    // Promise is pending\n    var hasFallback = React.Children.toArray(children).find(function (c) {\n      return c.type === Fallback;\n    });\n    return React.createElement(Fragment, null, hasFallback || null);\n  }\n\n  if (!isResolved) {\n    // Promise is fulfilled and rejected\n    var hasElse = React.Children.toArray(children).find(function (c) {\n      return c.type === Else;\n    });\n    if (!hasElse) return React.createElement(Fragment, null, null); // Inject caught error\n\n    var elseElement = hasElse;\n\n    if (typeof hasElse.props.children === 'function') {\n      elseElement = _extends({}, hasElse, {\n        props: _extends({}, hasElse.props, {\n          children: function children() {\n            return hasElse.props.children(returnValue, history.current, cancellablePromise.promise);\n          }\n        })\n      });\n    }\n\n    return React.createElement(Fragment, null, elseElement);\n  } // Promise is fulfilled and resolved\n\n\n  var hasThen = React.Children.toArray(children).find(function (c) {\n    return c.type === Then;\n  });\n  if (!hasThen) return React.createElement(Fragment, null, null); // Inject promise return value\n\n  var thenElement = hasThen;\n\n  if (typeof hasThen.props.children === 'function') {\n    thenElement = _extends({}, hasThen, {\n      props: _extends({}, hasThen.props, {\n        children: function children() {\n          return hasThen.props.children(returnValue, history.current, cancellablePromise.promise);\n        }\n      })\n    });\n  }\n\n  return React.createElement(Fragment, null, thenElement);\n}\n/**\n * Handles errors by throwing them to the console.\n * `__DEV__` is replaced by tsdx using {@link https://www.npmjs.com/package/babel-plugin-dev-expression babel-plugin-dev-expressions}\n * which will ensure this entire throw is not present in production\n * @param condition The condition to check\n * @param message The message to throw if `condition` resolves to `true`\n */\n\n\nfunction tinyWarning(condition, message) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (condition) {\n      // check console for IE9 support which provides console\n      // only with open devtools\n      if (typeof console !== 'undefined') {\n        console.warn(message);\n      } // Throwing an error and catching it immediately to improve debugging\n      // Users can utilize 'pause on caught exceptions' to get into this throw\n\n\n      try {\n        throw new Error(message);\n      } catch (x) {// noop\n      }\n    }\n  }\n}\n/**\n * If condition evaluates to true, renders the `<Then />` block will be rendered,\n * otherwise renders the `<Else />` block. Either block may be omitted.\n *\n * This component can contain any number of `<Then />` or `<Else />` blocks,\n * but only the first block of the right type (either Then or Else, depending on the condition) will be rendered.\n * @param __namedParameters The props to pass down to the `<IF />` component, see {@link ComponentWithConditionProps}\n */\n\n\nvar If = function If(_ref) {\n  var condition = _ref.condition,\n      _ref$keepAlive = _ref.keepAlive,\n      keepAlive = _ref$keepAlive === void 0 ? false : _ref$keepAlive,\n      children = _ref.children;\n\n  if (!children) {\n    return null;\n  }\n\n  tinyWarning(!Array.isArray(children) && !(children.type === Else || children.type === Then) || !React.Children.toArray(children).every(function (child) {\n    return child.type === Else || child.type === Then || child.type === Fallback;\n  }), 'The <If> component should contain <Then /> <Else /> or <Fallback /> components as its children');\n\n  if (isThenable(condition)) {\n    return React.createElement(IfAsync, {\n      promise: condition,\n      keepAlive: keepAlive\n    }, children);\n  }\n\n  var conditionResult = getConditionResult(condition);\n  return React.createElement(Fragment, null, React.Children.toArray(children).find(function (c) {\n    return c.type !== Else !== !conditionResult;\n  }) || null);\n};\n/**\n * It will render the first matching `<Case />`, or the first encountered `<Default />` (or `null`).\n *\n * This component can contain any number of `<Case />` and one `<Default />` blocks\n * @param __namedParameters Children to pass into the `<Switch />` component\n */\n\n\nvar Switch = function Switch(_ref) {\n  var _ref2, _matchingCase;\n\n  var children = _ref.children; // -- Inspired by react-router --\n  // We use React.Children.forEach instead of React.Children.toArray().find()\n  // here because toArray adds keys to all child elements and we do not want\n  // to trigger an unmount/remount for two children <Case>s or <Default>s\n\n  var matchingCase = undefined;\n  var defaultCase = undefined; // If the children are a function then resolve it first\n\n  if (isFunction(children)) {\n    children = children();\n  }\n\n  React.Children.forEach(children, function (child) {\n    // not a valid react child, don't add it\n\n    /* istanbul ignore next - This is only a safe fail for people writing bad code */\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    if (!matchingCase && child.type === Case) {\n      var condition = child.props.condition;\n      var conditionResult = getConditionResult(condition);\n\n      if (conditionResult) {\n        matchingCase = child;\n      } // else not matching condition, don't add it\n\n    } else if (!defaultCase && child.type === Default) {\n      defaultCase = child;\n    } // else unknown type, don't add it\n\n  });\n  return (_ref2 = (_matchingCase = matchingCase) != null ? _matchingCase : defaultCase) != null ? _ref2 : null;\n};\n/** A shorthand for\n *\n * ```jsx\n * <If condition={...}>\n *     <Else>\n *         { ... }\n *     </Else>\n * </If>\n * ```\n *\n * The same rules apply to the child elements as with using the `<Else />` block.\n *\n * @param __namedParameters The props to pass down to the `<IF />` component, see {@link ComponentWithConditionProps}\n */\n\n\nvar Unless = function Unless(_ref) {\n  var condition = _ref.condition,\n      children = _ref.children;\n  var conditionResult = Boolean(getConditionResult(condition));\n  return !conditionResult && children ? render({\n    children: children\n  }) : null;\n};\n\nUnless.defaultProps = {\n  children: null\n};\n/** A shorthand for\n *\n * ```jsx\n * <If condition={...}>\n *     <Then>\n *         { ... }\n *     </Then>\n * </If>\n * ```\n *\n * The same rules apply to the child elements as with using the `<Then /`> block.\n *\n * @param __namedParameters The props to pass down to the `<IF />` component, see {@link ComponentWithConditionProps}\n */\n\nvar When = function When(_ref) {\n  var condition = _ref.condition,\n      children = _ref.children;\n  var conditionResult = Boolean(getConditionResult(condition));\n  return conditionResult && children ? render({\n    children: children\n  }) : null;\n};\n\nWhen.defaultProps = {\n  children: null\n};\nexport { Case, Default, Else, Fallback, If, Switch, Then, Unless, When };","map":{"version":3,"mappings":"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","names":["render","props","children","React","Fragment","Case","defaultProps","Default","Else","Fallback","getConditionResult","condition","conditionResult","Boolean","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","isFunction","input","hasThen","Reflect","has","isThenable","shallowArraysEqual","a","b","Array","isArray","createCancellablePromise","promise","isCancelled","wrappedPromise","res","rej","_context","d","cancel","useSingleton","callback","dependencies","hasRan","useRef","lastDependencies","hasDependencies","hasAnyDependencyChanged","current","Then","IfAsync","keepAlive","_ref$keepAlive","useState","isResolved","setIsResolved","returnValue","setReturnValue","cancellablePromise","useMemo","history","useEffect","data","hasFallback","Children","toArray","find","c","hasElse","elseElement","thenElement","tinyWarning","message","console","warn","x","If","every","child","Switch","matchingCase","defaultCase","isValidElement","Unless","When"],"sources":["C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\render.tsx","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\Case.tsx","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\Default.tsx","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\Else.tsx","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\Fallback.tsx","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\getConditionResults.ts","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\node_modules\\regenerator-runtime\\runtime.js","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\isThenable.ts","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\utils.ts","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\hooks.ts","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\Then.tsx","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\IfAsync.tsx","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\tinyWarning.ts","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\If.tsx","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\Switch.tsx","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\Unless.tsx","C:\\Users\\Silvio Jr\\Desktop\\Projeto Integrador II\\makuntz-ProjetoIntegradorII---Univesp\\node_modules\\react-if\\src\\When.tsx"],"sourcesContent":["import React, { Fragment } from 'react';\nimport type { FCWithImplicitChildren } from './types';\n\n/**\n * Renders a React component while also checking whether the children are a function or not\n * @param props Props of the component to render\n */\nexport const render: FCWithImplicitChildren = (props) => {\n  if (typeof props.children === 'function') {\n    return <Fragment>{props.children()}</Fragment>;\n  }\n\n  return <Fragment>{props.children || null}</Fragment>;\n};\n","import type { FC } from 'react';\nimport { render } from './render';\nimport type { ComponentWithConditionPropsWithFunctionChildren } from './types';\n\n/**\n * If the `<Case />` is the first one to have its condition evaluates to true\n * inside the parent `<Switch />` it will be the only rendered.\n * @param props The props to pass down to the `<Case />` component\n */\nexport const Case: FC<ComponentWithConditionPropsWithFunctionChildren> = (props) => render(props);\n\nCase.defaultProps = {\n  children: null\n};\n","import { render } from './render';\nimport type { FCWithImplicitChildren } from './types';\n\n/**\n * If no `<Case />` have its condition evaluates to true inside the parent `<Switch />`,\n * the first `<Default />` will be the only one rendered.\n * @param props The props to pass down to the `<Default />` component\n */\nexport const Default: FCWithImplicitChildren = (props) => render(props);\n\nDefault.defaultProps = {\n  children: null\n};\n","import { render } from './render';\nimport type { FCWithImplicitChildren } from './types';\n\n/**\n * Must only contain a single child, which it renders as-is.\n * Should not be used outside of an `<If />` block.\n * @param props The props to pass down to the `<Else />` component\n */\nexport const Else: FCWithImplicitChildren = (props) => render(props);\n","import { render } from './render';\nimport type { FCWithImplicitChildren } from './types';\n\n/**\n * Must contain only a single child, which it renders as-is.\n * Should not be used outside of an `<If />` block whose condition prop is a promise.\n * @param props The props to pass down to the `<Fallback />` component\n */\nexport const Fallback: FCWithImplicitChildren = (props) => render(props);\n","import type { BooleanLike } from './types';\n\n/**\n * Resolves a condition that is {@link BooleanLike} or returns {@link BooleanLike} from a function\n * @param condition The condition to resolve\n */\nexport const getConditionResult = (condition: BooleanLike | ((...args: unknown[]) => BooleanLike)): boolean => {\n  const conditionResult = Boolean(typeof condition === 'function' ? condition() : condition);\n\n  return conditionResult;\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/**\n * The MIT License (MIT)\n *\n * Copyright © `2020` `The Sapphire Community and its contributors`\n *\n * Source: https://github.com/sapphiredev/utilities/blob/main/packages/utilities/src/lib/isThenable.ts\n * Full license: https://github.com/sapphiredev/utilities/blob/main/LICENSE.md\n */\n\n/* eslint-disable @typescript-eslint/ban-types */\n\ninterface Thenable {\n  then: Function;\n  catch: Function;\n}\n\n/**\n * Verify if the input is a function.\n * @param input The function to verify\n */\n\nexport function isFunction(input: unknown): input is Function {\n  return typeof input === 'function';\n}\n\nfunction hasThen(input: { then?: Function }): boolean {\n  return Reflect.has(input, 'then') && isFunction(input.then);\n}\n\nfunction hasCatch(input: { catch?: Function }): boolean {\n  return Reflect.has(input, 'catch') && isFunction(input.catch);\n}\n\n/**\n * Verify if an object is a promise.\n * @param input The promise to verify\n */\nexport function isThenable(input: unknown): input is Thenable {\n  if (typeof input !== 'object' || input === null) return false;\n  return input instanceof Promise || (input !== Promise.prototype && hasThen(input) && hasCatch(input));\n}\n","import { isThenable } from './isThenable';\nimport type { CancellablePromise, ExtendablePromise } from './types';\n\n/**\n * Compare two arrays without checking for possible nested properties\n * @param a Array to compare with b\n * @param b Array to compare with a\n * @returns True if arrays are identical, false if they are different\n */\nexport const shallowArraysEqual = (a: any[], b: any[]): boolean => {\n  if (!Array.isArray(a) || !Array.isArray(b)) throw new Error('shallowArraysEqual only accepts arrays as parameters');\n  if (a.length !== b.length) return false;\n\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n};\n\n/**\n * Create a CancellablePromise from a native Promise\n * @param promise The promise object to wrap\n * @returns Return value is an object of type CancellablePromise, with 2 properties:\n * - promise: a promise that can be left pending\n * - cancel: the function to use for cancelling the returned promise\n */\nexport const createCancellablePromise = <T>(promise: ExtendablePromise<T>): CancellablePromise => {\n  if (!isThenable(promise)) {\n    throw new Error('Argument of createCancellablePromise should be a Promise');\n  }\n\n  const isCancelled = { value: false };\n\n  const wrappedPromise: ExtendablePromise<T> = new Promise(async (res, rej) => {\n    try {\n      const d = await promise;\n      return !isCancelled.value && res(d);\n    } catch (error) {\n      !isCancelled.value && rej(error);\n    }\n  });\n\n  // Forward potential additional properties\n  Object.keys(promise).forEach((key) => {\n    wrappedPromise[key] = promise[key];\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel: () => {\n      isCancelled.value = true;\n    }\n  };\n};\n","import { useRef } from 'react';\nimport { shallowArraysEqual } from './utils';\n\n/**\n * Calls a function only once during component lifecycle;\n * When dependency array is provided, will call the function again if at least one of the dependencies changed\n * @param callback The function to execute only once\n * @param dependencies A list of dependencies whose value, if changed since last call,\n * will trigger the execution of the callback\n */\nexport const useSingleton = (callback: () => any, dependencies: any[] = []) => {\n  const hasRan = useRef<boolean>(false);\n  const lastDependencies = useRef<any[]>([]);\n\n  // Parameters type check\n  if (typeof callback !== 'function') {\n    throw new Error(`Incorrect callback parameter for useSingleton hook; expected a function, but got: '${typeof callback}'.`);\n  }\n  if (!Array.isArray(dependencies)) {\n    throw new Error(`Incorrect dependencies parameter for useSingleton; expected an array, but got: '${typeof dependencies}'.`);\n  }\n\n  const hasDependencies = Array.isArray(dependencies) && dependencies.length > 0;\n  if (hasDependencies) {\n    // Has dependencies\n    const hasAnyDependencyChanged = !shallowArraysEqual(lastDependencies.current, dependencies);\n    if (hasAnyDependencyChanged) {\n      // Any dep has changed => overwrite last dependencies and execute callback\n      lastDependencies.current = dependencies;\n    } else if (hasRan.current) {\n      // No dep has changed => same behaviour as if no dependencies\n      return;\n    }\n  } else if (hasRan.current) {\n    // No dependencies\n    return;\n  }\n\n  callback();\n  hasRan.current = true;\n};\n","import { render } from './render';\nimport type { FCWithImplicitChildren } from './types';\n\n/**\n * Must contain only a single child, which it renders as-is.\n * Should not be used outside of an `<If />` block.\n * @param props The props to pass down to the `<Then />` component\n */\nexport const Then: FCWithImplicitChildren = (props) => render(props);\n","import React, { Fragment, useEffect, useMemo, useRef, useState, PropsWithChildren, ReactElement } from 'react';\nimport { Else } from './Else';\nimport { Fallback } from './Fallback';\nimport { useSingleton } from './hooks';\nimport { isThenable } from './isThenable';\nimport { Then } from './Then';\nimport type { AsyncSupportProps, CancellablePromise, ExtendablePromise } from './types';\nimport { createCancellablePromise } from './utils';\n\n/**\n * Props for IfAsync\n */\ninterface Props<T> extends AsyncSupportProps, PropsWithChildren<{ promise: ExtendablePromise<T> }> {}\n\n/**\n * Is included in the `<If />` component, rendered when the condition prop of `<If />` is a Promise;\n * Renders the Fallback component, if contains any, until provided promise is fulfilled;\n * Renders `<Then />` when promise is fulfilled, `<Else />` when rejected\n */\n\nexport function IfAsync<T = any>({ promise, keepAlive = false, children }: Props<T>) {\n  const [isResolved, setIsResolved] = useState<null | boolean>(null);\n  const [returnValue, setReturnValue] = useState(null);\n\n  // Make promise cancellable\n  const cancellablePromise = useMemo((): CancellablePromise => createCancellablePromise(promise), [promise]);\n  const history = useRef<CancellablePromise[]>([]); // Keep history of promises\n\n  // Handle unmount\n  useEffect(() => {\n    return () => {\n      if (!keepAlive) {\n        cancellablePromise.cancel();\n      }\n    };\n  }, [cancellablePromise, cancellablePromise.promise, keepAlive]);\n\n  // Await promise\n  useSingleton(async () => {\n    setIsResolved(null);\n    setReturnValue(null);\n\n    try {\n      const data = await cancellablePromise.promise;\n      setReturnValue(data);\n      setIsResolved(true);\n      history.current.push(cancellablePromise);\n    } catch (error) {\n      setReturnValue(error as any);\n      setIsResolved(false);\n      history.current.push(cancellablePromise);\n    }\n  }, [cancellablePromise.promise]);\n\n  if (!children || !isThenable(promise)) {\n    return null;\n  }\n\n  if (isResolved === null) {\n    // Promise is pending\n    const hasFallback = (React.Children.toArray(children) as ReactElement[]).find((c) => c.type === Fallback);\n    return <Fragment>{hasFallback || null}</Fragment>;\n  }\n\n  if (!isResolved) {\n    // Promise is fulfilled and rejected\n    const hasElse = (React.Children.toArray(children) as ReactElement[]).find((c) => c.type === Else);\n    if (!hasElse) return <Fragment>{null}</Fragment>;\n\n    // Inject caught error\n    let elseElement = hasElse;\n    if (typeof hasElse.props.children === 'function') {\n      elseElement = {\n        ...hasElse,\n        props: {\n          ...hasElse.props,\n          children: () => hasElse.props.children(returnValue, history.current, cancellablePromise.promise)\n        }\n      };\n    }\n    return <Fragment>{elseElement}</Fragment>;\n  }\n\n  // Promise is fulfilled and resolved\n  const hasThen = (React.Children.toArray(children) as ReactElement[]).find((c) => c.type === Then);\n  if (!hasThen) return <Fragment>{null}</Fragment>;\n\n  // Inject promise return value\n  let thenElement = hasThen;\n\n  if (typeof hasThen.props.children === 'function') {\n    thenElement = {\n      ...hasThen,\n      props: {\n        ...hasThen.props,\n        children: () => hasThen.props.children(returnValue, history.current, cancellablePromise.promise)\n      }\n    };\n  }\n\n  return <Fragment>{thenElement}</Fragment>;\n}\n","/**\n * Handles errors by throwing them to the console.\n * `__DEV__` is replaced by tsdx using {@link https://www.npmjs.com/package/babel-plugin-dev-expression babel-plugin-dev-expressions}\n * which will ensure this entire throw is not present in production\n * @param condition The condition to check\n * @param message The message to throw if `condition` resolves to `true`\n */\nexport function tinyWarning(condition: boolean, message: string): asserts condition {\n  if (__DEV__) {\n    if (condition) {\n      // check console for IE9 support which provides console\n      // only with open devtools\n\n      if (typeof console !== 'undefined') {\n        console.warn(message);\n      }\n\n      // Throwing an error and catching it immediately to improve debugging\n      // Users can utilize 'pause on caught exceptions' to get into this throw\n      try {\n        throw new Error(message);\n      } catch (x) {\n        // noop\n      }\n    }\n  }\n}\n\ndeclare global {\n  let __DEV__: boolean;\n}\n","import React, { FC, Fragment, ReactElement } from 'react';\nimport { Else } from './Else';\nimport { Fallback } from './Fallback';\nimport { getConditionResult } from './getConditionResults';\nimport { IfAsync } from './IfAsync';\nimport { isThenable } from './isThenable';\nimport { Then } from './Then';\nimport { tinyWarning } from './tinyWarning';\nimport type { ComponentWithConditionPropsAsyncSupport, ExtendablePromise } from './types';\n\n/**\n * If condition evaluates to true, renders the `<Then />` block will be rendered,\n * otherwise renders the `<Else />` block. Either block may be omitted.\n *\n * This component can contain any number of `<Then />` or `<Else />` blocks,\n * but only the first block of the right type (either Then or Else, depending on the condition) will be rendered.\n * @param __namedParameters The props to pass down to the `<IF />` component, see {@link ComponentWithConditionProps}\n */\nexport const If: FC<ComponentWithConditionPropsAsyncSupport> = ({ condition, keepAlive = false, children }) => {\n  if (!children) {\n    return null;\n  }\n\n  tinyWarning(\n    (!Array.isArray(children) && !((children as ReactElement).type === Else || (children as ReactElement).type === Then)) ||\n      !(React.Children.toArray(children) as ReactElement[]).every((child) => child.type === Else || child.type === Then || child.type === Fallback),\n    'The <If> component should contain <Then /> <Else /> or <Fallback /> components as its children'\n  );\n\n  if (isThenable(condition)) {\n    return (\n      <IfAsync promise={condition as ExtendablePromise<any>} keepAlive={keepAlive}>\n        {children}\n      </IfAsync>\n    );\n  }\n\n  const conditionResult = getConditionResult(condition);\n\n  return <Fragment>{(React.Children.toArray(children) as ReactElement[]).find((c) => (c.type !== Else) !== !conditionResult) || null}</Fragment>;\n};\n","import React, { ReactElement } from 'react';\nimport { Case } from './Case';\nimport { Default } from './Default';\nimport { getConditionResult } from './getConditionResults';\nimport { isFunction } from './isThenable';\nimport type { FCWithImplicitChildren } from './types';\n\n/**\n * It will render the first matching `<Case />`, or the first encountered `<Default />` (or `null`).\n *\n * This component can contain any number of `<Case />` and one `<Default />` blocks\n * @param __namedParameters Children to pass into the `<Switch />` component\n */\nexport const Switch: FCWithImplicitChildren = ({ children }) => {\n  // -- Inspired by react-router --\n\n  // We use React.Children.forEach instead of React.Children.toArray().find()\n  // here because toArray adds keys to all child elements and we do not want\n  // to trigger an unmount/remount for two children <Case>s or <Default>s\n  let matchingCase: ReactElement | undefined = undefined;\n  let defaultCase: ReactElement | undefined = undefined;\n\n  // If the children are a function then resolve it first\n  if (isFunction(children)) {\n    children = children();\n  }\n\n  React.Children.forEach(children, (child) => {\n    // not a valid react child, don't add it\n    /* istanbul ignore next - This is only a safe fail for people writing bad code */\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    if (!matchingCase && child.type === Case) {\n      const { condition } = child.props;\n\n      const conditionResult = getConditionResult(condition);\n\n      if (conditionResult) {\n        matchingCase = child;\n      } // else not matching condition, don't add it\n    } else if (!defaultCase && child.type === Default) {\n      defaultCase = child;\n    } // else unknown type, don't add it\n  });\n\n  return matchingCase ?? defaultCase ?? null;\n};\n","import type { FC } from 'react';\nimport { getConditionResult } from './getConditionResults';\nimport { render } from './render';\nimport type { ComponentWithConditionPropsWithFunctionChildren } from './types';\n\n/** A shorthand for\n *\n * ```jsx\n * <If condition={...}>\n *     <Else>\n *         { ... }\n *     </Else>\n * </If>\n * ```\n *\n * The same rules apply to the child elements as with using the `<Else />` block.\n *\n * @param __namedParameters The props to pass down to the `<IF />` component, see {@link ComponentWithConditionProps}\n */\nexport const Unless: FC<ComponentWithConditionPropsWithFunctionChildren> = ({ condition, children }) => {\n  const conditionResult = Boolean(getConditionResult(condition));\n\n  return !conditionResult && children ? render({ children }) : null;\n};\n\nUnless.defaultProps = {\n  children: null\n};\n","import type { FC } from 'react';\nimport { getConditionResult } from './getConditionResults';\nimport { render } from './render';\nimport type { ComponentWithConditionPropsWithFunctionChildren } from './types';\n\n/** A shorthand for\n *\n * ```jsx\n * <If condition={...}>\n *     <Then>\n *         { ... }\n *     </Then>\n * </If>\n * ```\n *\n * The same rules apply to the child elements as with using the `<Then /`> block.\n *\n * @param __namedParameters The props to pass down to the `<IF />` component, see {@link ComponentWithConditionProps}\n */\nexport const When: FC<ComponentWithConditionPropsWithFunctionChildren> = ({ condition, children }) => {\n  const conditionResult = Boolean(getConditionResult(condition));\n\n  return conditionResult && children ? render({ children }) : null;\n};\n\nWhen.defaultProps = {\n  children: null\n};\n"]},"metadata":{},"sourceType":"module"}